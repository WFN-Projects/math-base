{"version":3,"sources":["components/CustomHits.jsx","components/CustomSearchBox.jsx","App.js","index.js"],"names":["CustomHits","connectHits","_ref","hits","react_default","a","createElement","Fragment","className","width","min-width","cellspacing","cellpadding","map","hit","key","objectID","name","latex","lib","text","type","class","CustomSearchBox","connectSearchBox","currentRefinement","refine","isSearchStalled","value","onChange","event","currentTarget","placeholder","algoliaClient","algoliasearch","searchClient","search","_search","Object","asyncToGenerator","regenerator_default","mark","_callee","requests","wrap","_context","prev","next","every","query","params","Boolean","abrupt","results","processingTimeMS","nbHits","facets","stop","_x","apply","this","arguments","searchForFacetValues","_searchForFacetValues","_callee2","_context2","_x2","App","Paper","InstantSearch","indexName","components_CustomSearchBox","components_CustomHits","Component","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.66a3a789.chunk.js","sourcesContent":["import { connectHits } from 'react-instantsearch-dom';\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport React from 'react';\n\nconst Hits = ({ hits }) => (\n    <React.Fragment>\n        <table className=\"table\" width=\"40vw\" min-width=\"500px\" cellspacing=\"0\" cellpadding=\"0\">\n            <tbody>\n                {hits.map(hit => (\n                    <tr key={hit.objectID}>\n                        <td width=\"150\"><b>{hit.name}</b></td>\n                        <td width=\"auto\">{hit.latex}</td>\n                        <td width=\"150\">\n                            <CopyToClipboard text={hit.latex}>\n                            <button type=\"button\" class=\"btn btn-outline-secondary\">Copy LaTeX</button>\n                            </CopyToClipboard>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </React.Fragment>\n);\n\nconst CustomHits = connectHits(Hits);\n\nexport default CustomHits;","import { connectSearchBox } from 'react-instantsearch-dom';\nimport React from 'react';\n\nconst SearchBox = ({ currentRefinement, isSearchStalled, refine }) => (\n  <React.Fragment>\n    <i class=\"fas fa-search\"></i>\n    <input\n      width=\"60vw\"\n      class=\"search\"\n      value={currentRefinement}\n      onChange={event => refine(event.currentTarget.value)}\n      placeholder=\"Enter a formula name...\"\n    />\n    </React.Fragment>\n);\n\nconst CustomSearchBox = connectSearchBox(SearchBox);\n\nexport default CustomSearchBox;","import React, { Component } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport {\n  InstantSearch,\n} from 'react-instantsearch-dom';\nimport './App.css';\nimport CustomHits from './components/CustomHits';\nimport CustomSearchBox from './components/CustomSearchBox';\nimport Paper from \"@material-ui/core/Paper\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\n//actual search client\nconst algoliaClient = algoliasearch(\n  '1QZ1KS7XU1',\n  '64c5bbe394f75e33424ac7026a9a5621'\n);\n//proxy search client\nconst searchClient = {\n  async search(requests) {\n    // change conditional if any of the other facets are faked\n    if (requests.every(({ params: { query } }) => Boolean(query) === false)) {\n      return {\n        results: requests.map(params => {\n          // fake something of the result if used by the search interface\n          return {\n            processingTimeMS: 0,\n            nbHits: 0,\n            hits: [],\n            facets: {},\n          };\n        }),\n      };\n    }\n    return algoliaClient.search(requests);\n  },\n  async searchForFacetValues(requests) {\n    return algoliaClient.searchForFacetValues(requests);\n  },\n};\n\nclass App extends Component {\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <header>Math Base</header>\n        <p class=\"sub\">A motto will go here one day...</p>\n        <div className=\"container\">\n          <Paper>\n            <InstantSearch searchClient={searchClient} indexName=\"FINAL_FORMULAS\">\n              <div className=\"search-panel\">\n                <div className=\"search-panel__results\">\n                  <CustomSearchBox/>\n                  <CustomHits/>\n                </div>\n              </div>\n            </InstantSearch>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );"],"sourceRoot":""}